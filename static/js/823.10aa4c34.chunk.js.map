{"version":3,"file":"static/js/823.10aa4c34.chunk.js","mappings":"0OACA,GAAgB,WAAa,4BCA7B,EAA4B,0BAA5B,EAAmE,2BAAnE,EAAkH,kCAAlH,EAAyO,iC,sCC+CzO,EA1CkB,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SACnB,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAkBA,OACE,mBAAQC,UAAWC,EAAnB,UACE,kBAAMD,UAAWC,EAAmBL,SAdf,SAAAM,GACvBA,EAAEC,iBAE4B,KAA1BL,EAAYM,KAAK,MAKrBR,EAASE,GACTC,EAAe,KALbM,IAAAA,OAAAA,QAAwB,8BAUxB,WACE,mBAAQC,KAAK,SAASN,UAAWC,EAAjC,UACE,SAAC,MAAD,OAGF,kBACED,UAAWC,EACXM,MAAOT,EACPU,SA1BkB,SAAAN,GACxBH,EAAeG,EAAEO,cAAcF,MAAMG,gBA0B/BJ,KAAK,OACLK,YAAY,wBCatB,EA5Ce,WAAO,IAAD,EACnB,GAA4Bd,EAAAA,EAAAA,UAAS,IAArC,eAAOe,EAAP,KAAeC,EAAf,KACA,GAAsChB,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAEMe,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACd,OAAIF,QAAJ,IAAIA,GAAJ,UAAIA,EAAUG,aAAd,OAAI,EAAiBnB,cACnBC,EAAee,EAASG,MAAMnB,cAC9BoB,EAAAA,EAAAA,IAAaJ,EAASG,MAAMnB,aAAaqB,MAAK,SAAAC,GAAI,OAChDP,EAAUO,EAAKC,eAGlB,QAACP,QAAD,IAACA,GAAD,UAACA,EAAUG,aAAX,aAAC,EAAiBnB,cAMrB,OACE,4BACE,SAACwB,EAAD,CAAW1B,SANM,SAAA2B,GACnBxB,EAAewB,IACfL,EAAAA,EAAAA,IAAaK,GAAOJ,MAAK,SAAAC,GAAI,OAAIP,EAAUO,EAAKC,eAK7CT,EAAOY,OAAS,IACf,+BACE,eAAIxB,UAAWC,EAAAA,YAAf,SACGW,EAAOa,KAAI,SAAAC,GACV,OACE,yBACE,SAAC,KAAD,CACEC,GAAE,kBAAaD,EAAME,IACrBX,MAAO,CAAEY,KAAMf,EAAUhB,YAAaA,GAFxC,SAIG4B,EAAMI,SALFJ,EAAME,gB,0MC/BzBG,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAmB,mCAAG,oGACVD,IAAAA,IAAA,mCAAsCD,IAD5B,cAC3BG,EAD2B,yBAE1BA,EAASd,MAFiB,2CAAH,qDAKnBF,EAAY,mCAAG,WAAMK,GAAN,uFACHS,IAAAA,IAAA,6BACCT,EADD,oBACkBQ,EADlB,+CADG,cACpBG,EADoB,OAI1BC,QAAQC,IAAIF,EAASd,MAJK,kBAKnBc,EAASd,MALU,2CAAH,sDAQZiB,EAAe,mCAAG,WAAMC,GAAN,uFACNN,IAAAA,IAAA,gBACZM,EADY,oBACQP,EADR,oBADM,cACvBG,EADuB,yBAItBA,EAASd,MAJa,2CAAH,sDAOfmB,EAAY,mCAAG,WAAMC,GAAN,uFACHR,IAAAA,IAAA,gBACZQ,EADY,4BACeT,EADf,oBADG,cACpBG,EADoB,yBAInBA,EAASd,MAJU,2CAAH,sDAOZqB,EAAe,mCAAG,WAAMC,GAAN,uFACNV,IAAAA,IAAA,gBACZU,EADY,4BACiBX,EADjB,2BADM,cACvBG,EADuB,yBAItBA,EAASd,MAJa,2CAAH","sources":["webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","webpack://react-homework-template/./src/components/Search/Search.module.css?06df","components/Search/index.jsx","pages/Movies/index.jsx","service/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movie_list\":\"Movies_movie_list__MTC+Z\"};","// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"Search_searchbar__uR8cQ\",\"searchForm\":\"Search_searchForm__0FeD+\",\"searchForm_button\":\"Search_searchForm_button__+UuvX\",\"searchForm_button_label\":\"Search_searchForm_button_label__k+dSd\",\"searchForm_input\":\"Search_searchForm_input__VPke-\"};","import { useState } from 'react';\nimport styles from './Search.module.css';\nimport Notiflix from 'notiflix';\nimport { ImSearch } from 'react-icons/im';\nimport PropTypes from 'prop-types';\n\nconst Searchbar = ({ onSubmit }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleInputChange = e => {\n    setSearchQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSearchForm = e => {\n    e.preventDefault();\n\n    if (searchQuery.trim(' ') === '') {\n      Notiflix.Notify.failure('Please, fill out the form');\n      return;\n    }\n\n    onSubmit(searchQuery);\n    setSearchQuery('');\n  };\n\n  return (\n    <header className={styles.searchbar}>\n      <form className={styles.searchForm} onSubmit={handleSearchForm}>\n        <button type=\"submit\" className={styles.searchForm_button}>\n          <ImSearch />\n        </button>\n\n        <input\n          className={styles.searchForm_input}\n          value={searchQuery}\n          onChange={handleInputChange}\n          type=\"text\"\n          placeholder=\"Search movies\"\n        />\n      </form>\n    </header>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import { searchMovies } from '../../service/api';\nimport { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport styles from './Movies.module.css';\nimport Searchbar from '../../components/Search';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const location = useLocation();\n\n  useEffect(() => {\n    if (location?.state?.searchQuery) {\n      setSearchQuery(location.state.searchQuery);\n      searchMovies(location.state.searchQuery).then(data =>\n        setMovies(data.results)\n      );\n    }\n  }, [location?.state?.searchQuery]);\n\n  const handleSubmit = query => {\n    setSearchQuery(query);\n    searchMovies(query).then(data => setMovies(data.results));\n  };\n  return (\n    <div>\n      <Searchbar onSubmit={handleSubmit} />\n      {movies.length > 0 && (\n        <>\n          <ul className={styles.movies_list}>\n            {movies.map(movie => {\n              return (\n                <li key={movie.id}>\n                  <Link\n                    to={`/movies/${movie.id}`}\n                    state={{ from: location, searchQuery: searchQuery }}\n                  >\n                    {movie.title}\n                  </Link>\n                </li>\n              );\n            })}\n          </ul>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '90fc78e66cc89a0a00dfef80ac9f3880';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `search/movie?query=${query}&api_key=${API_KEY}&include_adult=false&page=1&language=en-US`\n  );\n  console.log(response.data);\n  return response.data;\n};\n\nexport const getMovieDetails = async movie_id => {\n  const response = await axios.get(\n    `movie/${movie_id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCast = async cast_id => {\n  const response = await axios.get(\n    `movie/${cast_id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieReviews = async review_id => {\n  const response = await axios.get(\n    `movie/${review_id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n"],"names":["onSubmit","useState","searchQuery","setSearchQuery","className","styles","e","preventDefault","trim","Notiflix","type","value","onChange","currentTarget","toLowerCase","placeholder","movies","setMovies","location","useLocation","useEffect","state","searchMovies","then","data","results","Search","query","length","map","movie","to","id","from","title","API_KEY","axios","fetchTrendingMovies","response","console","log","getMovieDetails","movie_id","getMovieCast","cast_id","getMovieReviews","review_id"],"sourceRoot":""}